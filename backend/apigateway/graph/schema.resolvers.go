package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.66

import (
	"context"
	"fmt"

	"github.com/3thanHead/apigateway/graph/model"
	"github.com/3thanHead/apigateway/internal/service"
)

// Color is the resolver for the color field.
func (r *queryResolver) Color(ctx context.Context) (*model.Color, error) {
	panic(fmt.Errorf("not implemented: Color - color"))
}

// Color is the resolver for the color field.
func (r *subscriptionResolver) Color(ctx context.Context) (<-chan *model.Color, error) {
	ch := redisService.Subscribe("color")
	return service.ReceiveColors(ctx, ch), nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

// Subscription returns SubscriptionResolver implementation.
func (r *Resolver) Subscription() SubscriptionResolver { return &subscriptionResolver{r} }

type queryResolver struct{ *Resolver }
type subscriptionResolver struct{ *Resolver }
